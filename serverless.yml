service: serverless-flask

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local
  - serverless-prune-plugin

custom:
  prjPrefix: ${self:service}-${self:provider.stage}
  defaultStage: dev
  wsgi:
    app: app/handler.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
  prune:
    automatic: true
    number: 5

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  #profile: your-aws-profile-name
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - "*"
  logs:
    restApi:
      accessLogging: false # Optional configuration which enables or disables access logging. Defaults to true.
      executionLogging: false # Optional configuration which enables or disables execution logging. Defaults to true.
      level: ERROR # Optional configuration which specifies the log level to use for execution logging. May be set to either INFO or ERROR.
      fullExecutionData: true # Optional configuration which specifies whether or not to log full requests/responses for execution logging. Defaults to true.
  logRetentionInDays: 14
  environment:
    PRJ_PREFIX: ${self:custom.prjPrefix}

functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  #getUser:
  #  handler: wsgi.handler
  #  events:
  #    - http: 'GET /users/{proxy+}'
  #getUsers:
  #  handler: wsgi.handler
  #  events:
  #    - http: 'GET /users'
  #createUser:
  #  handler: wsgi.handler
  #  events:
  #    - http: 'POST /users'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.prjPrefix}-users
